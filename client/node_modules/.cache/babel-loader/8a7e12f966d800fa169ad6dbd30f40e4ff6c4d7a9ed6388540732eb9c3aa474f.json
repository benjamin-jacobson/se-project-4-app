{"ast":null,"code":"var _jsxFileName = \"/home/bjacobson/Development/code/phase-4/project-4-v3/client/src/pages/Signup.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFormik } from \"formik\";\n// import { useFormik, Formik, Form, Field } from 'formik';\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SignUp({\n  setUser\n}) {\n  _s();\n  const formSchema = yup.object().shape({\n    username: yup.string().required(\"Must be less than 6 characters\").max(5),\n    password: yup.string().required(\"Must be more than 2 characters\").min(3)\n  });\n  const loginValidationSchema = yup.object().shape({\n    email: yup.string().email(\"Please enter valid email\").required('Email Address is Required'),\n    password: yup.string().min(8, ({\n      min\n    }) => `Password must be at least ${min} characters`).required('Password is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: formSchema,\n    onSubmit: values => {\n      fetch(\"signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      }).then(res => {\n        if (res.ok) {\n          res.json().then(user => setUser(user)); // OR could make them still log in by redirecting to app \"/\" and not setting user\n          window.location.href = \"/home\";\n        }\n      });\n    }\n  });\n\n  //   return (\n  //     <div>\n  //       <form onSubmit={formik.handleSubmit}>\n  //         <h1>Ben Sign Up</h1>\n  //         <label htmlFor=\"username\">Username</label>\n  //         <input\n  //           type=\"text\"\n  //           id=\"username\"\n  //           autoComplete=\"current-username\"\n  //           value={formik.values.username}\n  //           onChange={formik.handleChange}\n  //         />\n\n  //         <label htmlFor=\"password\">Password</label>\n  //         <input\n  //           type=\"password\"\n  //           id=\"password\"\n  //           autoComplete=\"current-password\"\n  //           value={formik.values.password}\n  //           onChange={formik.handleChange}\n  //         />\n  //         <button type=\"submit\">Sign Up</button>\n  //       </form>\n  //     </div>\n  //   );\n  // }\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: loginValidationSchema,\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => console.log(values),\n    children: ({\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      values,\n      errors,\n      isValid\n    }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        name: \"email\",\n        placeholder: \"Email Address\",\n        style: styles.textInput,\n        onChangeText: handleChange('email'),\n        onBlur: handleBlur('email'),\n        value: values.email,\n        keyboardType: \"email-address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(Text, {\n        style: {\n          fontSize: 10,\n          color: 'red'\n        },\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        name: \"password\",\n        placeholder: \"Password\",\n        style: styles.textInput,\n        onChangeText: handleChange('password'),\n        onBlur: handleBlur('password'),\n        value: values.password,\n        secureTextEntry: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 8\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(Text, {\n        style: {\n          fontSize: 10,\n          color: 'red'\n        },\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onPress: handleSubmit,\n        title: \"LOGIN\",\n        disabled: !isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n}\n_s(SignUp, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useFormik","yup","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","setUser","_s","formSchema","object","shape","username","string","required","max","password","min","loginValidationSchema","email","formik","initialValues","validationSchema","onSubmit","values","fetch","method","headers","body","JSON","stringify","then","res","ok","json","user","window","location","href","Formik","console","log","children","handleChange","handleBlur","handleSubmit","errors","isValid","TextInput","name","placeholder","style","styles","textInput","onChangeText","onBlur","value","keyboardType","fileName","_jsxFileName","lineNumber","columnNumber","Text","fontSize","color","secureTextEntry","Button","onPress","title","disabled","_c","$RefreshReg$"],"sources":["/home/bjacobson/Development/code/phase-4/project-4-v3/client/src/pages/Signup.js"],"sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\n// import { useFormik, Formik, Form, Field } from 'formik';\nimport * as yup from \"yup\";\n\nfunction SignUp({ setUser }) {\n\n  const formSchema = yup.object().shape({\n    username: yup.string().required(\"Must be less than 6 characters\").max(5),\n    password: yup.string().required(\"Must be more than 2 characters\").min(3),\n  })\n\n  const loginValidationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email(\"Please enter valid email\")\n      .required('Email Address is Required'),\n    password: yup\n      .string()\n      .min(8, ({ min }) => `Password must be at least ${min} characters`)\n      .required('Password is required'),\n  })\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n    },\n    validationSchema: formSchema,\n    onSubmit: (values) => {\n      fetch(\"signup\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(values),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((user) => setUser(user)); // OR could make them still log in by redirecting to app \"/\" and not setting user\n          window.location.href = \"/home\";\n        }\n      });\n    },\n  });\n\n//   return (\n//     <div>\n//       <form onSubmit={formik.handleSubmit}>\n//         <h1>Ben Sign Up</h1>\n//         <label htmlFor=\"username\">Username</label>\n//         <input\n//           type=\"text\"\n//           id=\"username\"\n//           autoComplete=\"current-username\"\n//           value={formik.values.username}\n//           onChange={formik.handleChange}\n//         />\n\n//         <label htmlFor=\"password\">Password</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           autoComplete=\"current-password\"\n//           value={formik.values.password}\n//           onChange={formik.handleChange}\n//         />\n//         <button type=\"submit\">Sign Up</button>\n//       </form>\n//     </div>\n//   );\n// }\nreturn (\n  <Formik\n   validationSchema={loginValidationSchema}\n   initialValues={{ email: '', password: '' }}\n   onSubmit={values => console.log(values)}\n >\n   {({\n     handleChange,\n     handleBlur,\n     handleSubmit,\n     values,\n     errors,\n     isValid,\n   }) => (\n     <>\n       <TextInput\n         name=\"email\"\n         placeholder=\"Email Address\"\n         style={styles.textInput}\n         onChangeText={handleChange('email')}\n         onBlur={handleBlur('email')}\n         value={values.email}\n         keyboardType=\"email-address\"\n       />\n       {errors.email &&\n         <Text style={{ fontSize: 10, color: 'red' }}>{errors.email}</Text>\n       }\n       <TextInput\n         name=\"password\"\n         placeholder=\"Password\"\n         style={styles.textInput}\n         onChangeText={handleChange('password')}\n         onBlur={handleBlur('password')}\n         value={values.password}\n         secureTextEntry\n       />\n       {errors.password &&\n         <Text style={{ fontSize: 10, color: 'red' }}>{errors.password}</Text>\n       }\n       <Button\n         onPress={handleSubmit}\n         title=\"LOGIN\"\n         disabled={!isValid}\n       />\n     </>\n   )}\n </Formik>\n);}\n\nexport default SignUp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}