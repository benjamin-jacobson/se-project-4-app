{"ast":null,"code":"var _jsxFileName = \"/home/bjacobson/Development/code/phase-4/project-4-v3/client/src/pages/Meetings.js\",\n  _s = $RefreshSig$();\nimport NavBar from \"../components/NavBar\";\nimport Header from \"../components/Header\";\nimport AddFriendMeeting from \"../components/AddFriendMeeting\";\nimport NewMeetup from \"../components/NewMeetup\";\nimport MeetingCard from \"../components/MeetingCard\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Meetings() {\n  _s();\n  const [friends, setFriends] = useState([]); // Need to fix which state is being used and how to update meetings\n  // const [allMeetings, setAllMeetings] = useState([])\n\n  // const handleAddMeeting = () => {console.log(\"write me to add!\")}\n\n  function handleAddMeeting(obj) {\n    // Ensure obj and obj.friend_id are defined\n    // Create a new array of friends with the updated meetings list\n    console.log(\"hanggg\");\n    // console.log(obj)\n    // console.log(\"hanggg\")\n    // console.log(friends)\n\n    friends.forEach(f => {\n      if (f.id === obj.friend_id) {\n        console.log(`blahh Friend ${f.id}: ${f.name}, Color ${f.favorite_color}`);\n        const newMeeting = {\n          activity_id: obj.activity_id,\n          date: obj.date,\n          friend_id: obj.friend_id,\n          id: f.meetings.length + 1\n        };\n        console.log(`blah 2 ${f.meetings.length + 1}`);\n        console.log(`blah 2 ${obj.activity_id}`);\n        console.log(newMeeting);\n        let updatedFriends = {\n          ...f,\n          meetings: [...f.meetings, newMeeting]\n        };\n        setFriends(updatedFriends);\n      }\n    });\n\n    // const updatedFriends = friends.map(friend => {\n    //     if (friend.id === obj.friend_id) {\n    //         // Create a new meeting object\n    //         const newMeeting = {\n    //             activity_id: obj.activity_id,\n    //             date: obj.date,\n    //             friend_id: obj.friend_id,\n    //             id: friend.meetings.length + 1 // Assign a new meeting id\n    //         };\n    //         // Return the friend with the updated meetings list\n    //         let updatedFriends = {\n    //             ...friend,\n    //             meetings: [...friend.meetings, newMeeting]\n    //         };\n    //         setFriends(updatedFriends);\n    //         console.log(`Added meeting for friend ${obj.friend_id}`)\n    //     }\n  }\n\n  // // Function to delete meetings by ID\n  const handleDeleteMeeting = idToDelete => {\n    const updatedFriends = friends.map(friend => {\n      return {\n        ...friend,\n        meetings: friend.meetings.filter(meeting => meeting.id !== idToDelete)\n      };\n    });\n    setFriends(updatedFriends); // MAKE SURE THIS IS THE RIGHT FRIEND! NOT ALL OF THEM\n  };\n  useEffect(() => {\n    fetch(\"/friends\").then(r => r.json()).then(data => setFriends(data)).catch(error => console.error(error));\n  }, []);\n  console.log(\"allmeetings\");\n  console.log(friends);\n  console.log(\"allmeetings\");\n  const meetingInformationDisplayArray = friends.map(f => {\n    return /*#__PURE__*/_jsxDEV(MeetingCard, {\n      name: f.name,\n      user_id: f.user_id,\n      meetings: f.meetings,\n      handleDeleteMeeting: handleDeleteMeeting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewMeetup, {\n      handleAddMeeting: handleAddMeeting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meetings on the books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), meetingInformationDisplayArray]\n  }, void 0, true);\n}\n_s(Meetings, \"QwbMuLO2kqwKmE9hi2K1MX3vzvc=\");\n_c = Meetings;\nexport default Meetings;\nvar _c;\n$RefreshReg$(_c, \"Meetings\");","map":{"version":3,"names":["NavBar","Header","AddFriendMeeting","NewMeetup","MeetingCard","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Meetings","_s","friends","setFriends","handleAddMeeting","obj","console","log","forEach","f","id","friend_id","name","favorite_color","newMeeting","activity_id","date","meetings","length","updatedFriends","handleDeleteMeeting","idToDelete","map","friend","filter","meeting","fetch","then","r","json","data","catch","error","meetingInformationDisplayArray","user_id","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/home/bjacobson/Development/code/phase-4/project-4-v3/client/src/pages/Meetings.js"],"sourcesContent":["import NavBar from \"../components/NavBar\";\nimport Header from \"../components/Header\";\nimport AddFriendMeeting from \"../components/AddFriendMeeting\";\nimport NewMeetup from \"../components/NewMeetup\";\nimport MeetingCard from \"../components/MeetingCard\";\n\nimport { useState, useEffect } from \"react\";\n\nfunction Meetings(){\n\n  const [friends, setFriends] = useState([]) // Need to fix which state is being used and how to update meetings\n  // const [allMeetings, setAllMeetings] = useState([])\n\n  // const handleAddMeeting = () => {console.log(\"write me to add!\")}\n\n  function handleAddMeeting(obj) {\n    // Ensure obj and obj.friend_id are defined\n    // Create a new array of friends with the updated meetings list\n    console.log(\"hanggg\")\n    // console.log(obj)\n    // console.log(\"hanggg\")\n    // console.log(friends)\n\n    friends.forEach(f => {\n      if (f.id === obj.friend_id) {\n              console.log(`blahh Friend ${f.id}: ${f.name}, Color ${f.favorite_color}`);\n\n              const newMeeting = {\n              activity_id: obj.activity_id,\n              date: obj.date,\n              friend_id: obj.friend_id,\n              id: f.meetings.length + 1\n            };\n            console.log(`blah 2 ${f.meetings.length + 1}`)\n            console.log(`blah 2 ${obj.activity_id}`)\n            console.log(newMeeting)\n            let updatedFriends = {...f,meetings: [...f.meetings, newMeeting]};\n            setFriends(updatedFriends);\n                }\n\n              }\n    );\n    \n\n\n    // const updatedFriends = friends.map(friend => {\n    //     if (friend.id === obj.friend_id) {\n    //         // Create a new meeting object\n    //         const newMeeting = {\n    //             activity_id: obj.activity_id,\n    //             date: obj.date,\n    //             friend_id: obj.friend_id,\n    //             id: friend.meetings.length + 1 // Assign a new meeting id\n    //         };\n    //         // Return the friend with the updated meetings list\n    //         let updatedFriends = {\n    //             ...friend,\n    //             meetings: [...friend.meetings, newMeeting]\n    //         };\n    //         setFriends(updatedFriends);\n    //         console.log(`Added meeting for friend ${obj.friend_id}`)\n    //     }\n\n}\n\n  // // Function to delete meetings by ID\n  const handleDeleteMeeting = (idToDelete) => {\n    const updatedFriends = friends.map(friend => {\n      return {\n        ...friend,\n        meetings: friend.meetings.filter(meeting => meeting.id !== idToDelete)\n      };\n    });\n    setFriends(updatedFriends); // MAKE SURE THIS IS THE RIGHT FRIEND! NOT ALL OF THEM\n  };\n\n\n  useEffect(() =>{\n    fetch(\"/friends\")\n      .then(r => r.json())\n      .then(data => setFriends(data))\n      .catch(error => console.error(error))\n  }, [])\n\n  console.log(\"allmeetings\")\n  console.log(friends)\n  console.log(\"allmeetings\")\n  const meetingInformationDisplayArray = friends.map(\n    f => {\n    return <MeetingCard name={f.name} user_id={f.user_id} meetings={f.meetings} handleDeleteMeeting={handleDeleteMeeting}/>\n  });\n\n\n  return (\n    <>\n    <NewMeetup handleAddMeeting={handleAddMeeting} />\n    <h1>Meetings on the books</h1>\n    {meetingInformationDisplayArray}\n    </>\n  )\n}\n\nexport default Meetings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}